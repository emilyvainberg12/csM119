<!DOCTYPE html>
<html>
	<head>
		<script src="https://d3js.org/d3.v4.min.js"></script>
		<title>Arduino Sensor Chart Data</title>
	</head>

	<body>
		<h1>Arduino Sensor Chart Data</h1>
		<svg width="800" height="600"></svg>
	</body>

<script src="https://d3js.org/d3.v7.min.js"></script>

<script type="application/javascript">
	const SERVERADDRESS = "http://127.0.0.1:3000"
	// use XML HTTP request to grab data from the server (central)
	let xmlhttp = new XMLHttpRequest()
	var dataset1 = [
];

	startTime = new Date();
	xmlhttp.onreadystatechange = function () {
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			let responseText = xmlhttp.responseText

			let sensorValue = parseFloat(JSON.parse(responseText).sensorValue)

			endTime = new Date();
			var timeDiff = endTime - startTime; 
			timeDiff /= 1000;

			dataset1.push([timeDiff, sensorValue])
			if (timeDiff > 10){
				dataset1 = []
				startTime = new Date()
			}

			var svg = d3.select("svg"),
				margin = 200,
				width = svg.attr("width") - margin, 
				height = svg.attr("height") - margin 

			var xScale = d3.scaleLinear().domain([0, 10]).range([0, width]),
				yScale = d3.scaleLinear().domain([-1, 1]).range([height, 0]);

			svg.selectAll("*").remove();
				
			var g = svg.append("g")
				.attr("transform", "translate(" + 100 + "," + 100 + ")");
			
			// X label
			svg.append('text')
			.attr('x', width/2 + 100)
			.attr('y', height - 15 + 150)
			.attr('text-anchor', 'middle')
			.text('Time Passed');
			
			// Y label
			svg.append('text')
				.attr('text-anchor', 'middle')
				.attr('transform', 'translate(60,' + height + ')rotate(-90)')
				.text('Sensor Value');

			g.append("g")
				.attr("transform", "translate(0," + height + ")")
				.call(d3.axisBottom(xScale));
			
			g.append("g")
				.call(d3.axisLeft(yScale));
			
			svg.append('g')
				.selectAll("dot")
				.data(dataset1)
				.enter()
				.append("circle")
				.attr("cx", function (d) { return xScale(d[0]); } )
				.attr("cy", function (d) { return yScale(d[1]); } )
				.attr("r", 3)
				.attr("transform", "translate(" + 100 + "," + 100 + ")")
				.style("fill", "blue");
   
			var line = d3.line()
				.x(function(d) { return xScale(d[0]); }) 
				.y(function(d) { return yScale(d[1]); }) 
				.curve(d3.curveMonotoneX)
			
			svg.append("path")
				.datum(dataset1) 
				.attr("class", "line") 
				.attr("transform", "translate(" + 100 + "," + 100 + ")")
				.attr("d", line)
				.style("fill", "none")
				.style("stroke", "blue")
				.style("stroke-width", "2");

		}
	}
	// periodically grab data
	let getData = () => {
		xmlhttp.open("POST", SERVERADDRESS, true)
		xmlhttp.setRequestHeader("Content-type", "application/json")
		xmlhttp.send("")
		setTimeout(() => {
			getData()
		}, 10)
	}
	getData()
</script>

</html>
